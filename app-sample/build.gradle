apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'

def gitSha = { ->
    def output = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = output
    }
    return output.toString().trim()
}.memoize()

android {

    namespace = "io.noties.markwon.app"

    compileSdkVersion config['compile-sdk']

    defaultConfig {
        applicationId 'io.noties.markwon.app'
        minSdkVersion 23
        targetSdkVersion config['target-sdk']
        versionCode 1
        versionName version

        resConfig 'en'

        base.archivesName = "markwon"

        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'String', 'GIT_REPOSITORY', '"https://github.com/noties/Markwon"'

        final def scheme = 'markwon'
        buildConfigField 'String', 'DEEPLINK_SCHEME', "\"$scheme\""
        manifestPlaceholders += ['deeplink_scheme': scheme]
    }

    compileOptions {
        targetCompatibility = rootProject.ext.get("target_java_version")
        sourceCompatibility = rootProject.ext.get("compatible_java_version")
    }

    kotlinOptions {
        jvmTarget = rootProject.ext.get("target_java_version_for_kotlin")
    }

    sourceSets {
        main {
            java.srcDirs += '../sample-utils/annotations'
        }
    }

    // do not sign in CI
    if (!project.hasProperty('CI')) {

        buildTypes {
            release {
                signingConfig = signingConfigs.debug
            }
        }
    }

    buildFeatures {
        buildConfig = true
        viewBinding = true
    }
}

kapt {
    arguments {
        arg('markwon.samples.file', "${projectDir}/samples.json".toString())
    }
}

dependencies {
    kapt project(':sample-utils:processor')
    kapt libs.prism4j.bundler

    implementation project(':markwon-core')
    implementation project(':markwon-ext:markwon-editor')
    implementation project(':markwon-ext:markwon-ext-latex')
    implementation project(':markwon-ext:markwon-ext-strikethrough')
    implementation project(':markwon-ext:markwon-ext-tables')
    implementation project(':markwon-ext:markwon-ext-tasklist')
    implementation project(':markwon-ext:markwon-html')
    implementation project(':markwon-ext:markwon-image')
    implementation project(':markwon-ext:markwon-inline-parser')
    implementation project(':markwon-ext:markwon-linkify')
    implementation project(':markwon-ext:markwon-recycler')
    implementation project(':markwon-ext:markwon-recycler-table')
    implementation project(':markwon-ext:markwon-simple-ext')
    implementation project(':markwon-ext:markwon-syntax-highlight')

    implementation project(':markwon-ext:markwon-image-picasso')
    implementation project(':markwon-ext:markwon-image-glide')
    implementation project(':markwon-ext:markwon-image-coil')

//        implementation libs.x.appcompat
    implementation libs.x.recyclerview
    implementation libs.x.cardview
    implementation libs.x.fragment
    implementation libs.okhttp
    implementation libs.prism4j
    implementation libs.gson
    implementation libs.adapt
    implementation libs.debug
    implementation libs.android.svg
    implementation libs.android.gif.impl
    implementation libs.coil

    testImplementation libs.junit
    testImplementation libs.robolectric
    testImplementation libs.mockito
}